# for-loop performance

audit.optimize_for_condition.name=For-loop condition optimizer
audit.optimize_for_condition.description=Search for places in For-loops where \
 it is possible to replace in condition each method \
invocation with local variable.<br> \
  Ex. <br>\
  <CODE><FONT color\='\#0000FF'>\
   &nbsp;List list = l;<br>\
   &nbsp;&nbsp;&nbsp;for(int i=0; i &lt; <FONT color\='\#FF0000'>list.size()</FONT>; i++) {<br>\
  	&nbsp;&nbsp;&nbsp;&nbsp;...  <br>\
  &nbsp;&nbsp;&nbsp;}<br>\
    </FONT></CODE><br>\
  \
  It could be:<br>\
  \
  <CODE><FONT color\='\#0000FF'>\
   &nbsp;List list = l;<br>\
   &nbsp;&nbsp;&nbsp;for(int i=0, <FONT color\='\#FF0000'>size = list.size()</FONT>; i &lt; <FONT color\='\#FF0000'>size</FONT>; i++) {<br>\
  	&nbsp;&nbsp;&nbsp;&nbsp;...  <br>\
  &nbsp;&nbsp;&nbsp;}<br>\
  </FONT></CODE>\
    \
  <br>NB! Be careful, if the list size is changed during loop, it damages the logic of yours code.
