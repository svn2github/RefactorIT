# Pseudo Abstract Class

audit.pseudo_abstract.name=Pseudo abstract class
audit.pseudo_abstract.description=\
  Search for classes declared as \
  <CODE><FONT color='#0000FF'>abstract</FONT></CODE> but not \
  having any abstract methods.


# Redundant Modifiers

audit.redundant_modifiers.name=Redundant modifiers
audit.redundant_modifiers.description=\
  Search for redundant modifiers.


# Staticalizable Methods

audit.static_candidate.name=Staticalizable methods
audit.static_candidate.description=\
  Search for methods that could be made \
  <CODE><FONT color='#0000FF'>static</FONT></CODE>.


# Minimize Access

audit.minimize_access.name=Minimize member access
audit.minimize_access.description=Minimize access rights for members declared \ 
  in the source code of selected targets 
audit.minimize_access.skip.constructors.name=Skip constructors


audit.modifier_order.name=Modifier order checker

audit.modifier_order.description=Checks the order of modifiers in class, interface, method and field declarations. 

audit.constant_field.name=Staticalizable and finalizable fields

audit.constant_field.description=Finds fields that can be made 'static' and 'final'.<br><br> Optionaly searches for 'static final' fields which are not named in upercase-style (for example\: myVariable -> MY_VARIABLE, etc.) 

audit.constant_field.skip.upper_case_names.name=constant name should be uppercase-style

audit.finalize_methods.name=Finalizable types and methods

audit.finalize_methods.description=Searches for methods that are never overriden and proposes 'final' modifier for them.


audit.finalize_locals.name=Finalizable local vars and parameters

audit.finalize_locals.description=Searches the code for local variables and method parameters, that are assigned only once and suggests 'final' modifier for them.


# Single assignment for private fields

audit.single_private_assignment.name=Finalizable private fields
audit.single_private_assignment.description=Check if a private field is assigned a value only once in constructors and if so then propose to change its modifier for final.
